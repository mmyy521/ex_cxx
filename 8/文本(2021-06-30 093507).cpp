#include<iostream>#include<string>#include<vector>#include<cmath>using namespace std;template<typename T>class Point2{	private:		T x;		T y;	public:		Point2(T x,T y){			this->x = x;			this->y = y;		}		T rx(){			return x;					}		T yr(){			return y;		}};template<typename T>class Line2{	private:		T x1;		T y1;		T x2;		T y2;		T length;	public:		Line2(Point2<T> pt1,Point2<T> pt2){			x1 = pt1.rx();			y1 = pt1.yr();			x2 = pt2.rx();			y2 = pt2.yr();		}		T Length(){			length = sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));		}};int main() {    Point2<double> pt1(1.0, 1.0);    Point2<double> pt2(3.0, 4.0);    Line2<double> line(pt1, pt2);    cout << line.Length() << endl;    int x1,y1, x2, y2;    cin >> x1 >> y1 >> x2 >> y2;    Line2<int> nLine(Point2<int>(x1, y1), Point2<int>(x2, y2));    cout << nLine.Length()<< endl;    return 0;}